{
  "resourceType": "StructureDefinition",
  "id": "obf-datatype-RepeatCountMax-model",
  "text": {
    "status": "generated",
    "div": "<div xmlns=\"http://www.w3.org/1999/xhtml\">\n  <p><b>RepeatCountMax Logical Model</b></p>\n  <p>If present, indicates that the count is a range - so to perform the action between [count] and [countMax] times.</p>\n</div>"
  },
  "url": "http://hl7.org/fhir/us/breast-radiology/fhir/StructureDefinition/obf-datatype-RepeatCountMax-model",
  "identifier": [
    {
      "system": "http://hl7.org/fhir/us/breast-radiology",
      "value": "obf.datatype.RepeatCountMax"
    }
  ],
  "name": "RepeatCountMax",
  "title": "obf-datatype-RepeatCountMax",
  "status": "draft",
  "date": "2019-07-30",
  "publisher": "Hl7",
  "contact": [
    {
      "telecom": [
        {
          "system": "url",
          "value": "http://BreastRadReport.com"
        }
      ]
    }
  ],
  "description": "If present, indicates that the count is a range - so to perform the action between [count] and [countMax] times.",
  "kind": "logical",
  "abstract": false,
  "type": "obf-datatype-RepeatCountMax-model",
  "baseDefinition": "http://hl7.org/fhir/StructureDefinition/Element",
  "derivation": "specialization",
  "snapshot": {
    "element": [
      {
        "id": "obf-datatype-RepeatCountMax-model",
        "path": "obf-datatype-RepeatCountMax-model",
        "definition": "If present, indicates that the count is a range - so to perform the action between [count] and [countMax] times.",
        "min": 0,
        "max": "*",
        "base": {
          "path": "obf-datatype-RepeatCountMax-model",
          "min": 0,
          "max": "*"
        },
        "mustSupport": false,
        "isModifier": false,
        "isSummary": false
      },
      {
        "id": "obf-datatype-RepeatCountMax-model.value",
        "path": "obf-datatype-RepeatCountMax-model.value",
        "short": "PositiveInt representing if present, indicates that the count is a range - so to perform the action between [count] and [countMax] times.",
        "definition": "PositiveInt representing if present, indicates that the count is a range - so to perform the action between [count] and [countMax] times.",
        "min": 1,
        "max": "1",
        "base": {
          "path": "obf-datatype-RepeatCountMax-model.value",
          "min": 1,
          "max": "1"
        },
        "type": [
          {
            "code": "positiveInt"
          }
        ],
        "mustSupport": false,
        "isModifier": false,
        "isSummary": false
      }
    ]
  },
  "differential": {
    "element": [
      {
        "id": "obf-datatype-RepeatCountMax-model",
        "path": "obf-datatype-RepeatCountMax-model",
        "definition": "If present, indicates that the count is a range - so to perform the action between [count] and [countMax] times.",
        "min": 0,
        "max": "*",
        "base": {
          "path": "obf-datatype-RepeatCountMax-model",
          "min": 0,
          "max": "*"
        },
        "mustSupport": false,
        "isModifier": false,
        "isSummary": false
      },
      {
        "id": "obf-datatype-RepeatCountMax-model.value",
        "path": "obf-datatype-RepeatCountMax-model.value",
        "short": "PositiveInt representing if present, indicates that the count is a range - so to perform the action between [count] and [countMax] times.",
        "definition": "PositiveInt representing if present, indicates that the count is a range - so to perform the action between [count] and [countMax] times.",
        "min": 1,
        "max": "1",
        "base": {
          "path": "obf-datatype-RepeatCountMax-model.value",
          "min": 1,
          "max": "1"
        },
        "type": [
          {
            "code": "positiveInt"
          }
        ],
        "mustSupport": false,
        "isModifier": false,
        "isSummary": false
      }
    ]
  }
}